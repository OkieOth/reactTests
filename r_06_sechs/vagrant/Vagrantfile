$printInfoScript = <<SCRIPT
  ipAddr=`ifconfig enp0s8 | grep 'inet addr' | grep Bcast | awk '{print $2}' | sed 's/addr://'`
  echo "IP-address of the vm: $ipAddr"
  echo "Test-Urls:
http://$ipAddr:8080/
http://$ipAddr:8080/r_06/
"
  
SCRIPT

$startDockerComposeEnv = <<DOCKERCOMPOSEENV
    if ! [ -d /opt/reactTests ]; then
        # check for existing old containers ...
        docker rm -f r06_httpd_1
        docker rm -f r06_npm_1
        cd /opt/
        curl -Ls https://codeload.github.com/OkieOth/reactTests/zip/master -o reactTests.zip
        unzip reactTests.zip && rm -f reactTests.zip && mv reactTests-master reactTests
        pushd /opt/reactTests/r_06_sechs/docker-compose > /dev/null
            # modify the directory to use as base for react project
            mv docker-compose.yml docker-compose.yml.orig
            cat docker-compose.yml.orig | sed -e 's-../client:-/opt/myproject:-' > docker-compose.yml
        popd
        sudo chown -R ubuntu:ubuntu /opt/reactTests
    fi
    /opt/reactTests/r_06_sechs/docker-compose/bin/start.sh
DOCKERCOMPOSEENV

Vagrant.configure(2) do |config|
  config.vm.box = "ubuntu/xenial64"
  config.vm.box_check_update = false
  config.vm.synced_folder "../client", "/opt/myproject"
  config.vm.network "private_network", type: "dhcp"
  config.vm.provider "virtualbox" do |vb|
     vb.memory = "4096"
  end
config.vm.provision "shell", inline: <<-SHELL
    sudo echo "deb https://apt.dockerproject.org/repo ubuntu-xenial main" | sudo tee /etc/apt/sources.list.d/docker.list
    sudo apt-get update
    # Docker requirements
    sudo groupadd docker
    sudo usermod -aG docker ubuntu
    sudo apt-get install -y unzip linux-image-extra-$(uname -r) linux-image-extra-virtual
    sudo apt-get install -y --allow-unauthenticated docker-engine
    sudo curl -Ls "https://github.com/docker/compose/releases/download/1.9.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo su -c 'chown :docker /usr/local/bin/docker-compose && chmod ug+x /usr/local/bin/docker-compose'
  SHELL

  # extra provision to start keycloak test environment
  config.vm.provision "shell", inline: $startDockerComposeEnv,
        run: "always"

  # extra provision to print the ip address of the vm
        config.vm.provision "shell", inline: $printInfoScript,
        run: "always"
end
